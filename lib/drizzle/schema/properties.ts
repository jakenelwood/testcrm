import { pgTable, uuid, text, integer, numeric, boolean, jsonb, timestamp } from 'drizzle-orm/pg-core';
import { sql } from 'drizzle-orm';

export const properties = pgTable('properties', {
  id: uuid().notNull().primaryKey().default('gen_random_uuid()'),
  workspace_id: uuid().notNull(),
  contact_id: uuid().notNull(),
  property_type: text(),
  address: text().notNull(),
  city: text().notNull(),
  state: text().notNull(),
  zip_code: text().notNull(),
  county: text(),
  year_built: integer(),
  square_feet: integer(),
  lot_size_acres: numeric({ precision: 8, scale: 2 }),
  stories: integer(),
  bedrooms: integer(),
  bathrooms: numeric({ precision: 3, scale: 1 }),
  construction_type: text(),
  roof_type: text(),
  roof_age: integer(),
  foundation_type: text(),
  exterior_walls: text(),
  heating_type: text(),
  cooling_type: text(),
  electrical_type: text(),
  plumbing_type: text(),
  smoke_detectors: boolean().default(false),
  fire_extinguishers: boolean().default(false),
  security_system: boolean().default(false),
  sprinkler_system: boolean().default(false),
  ownership_type: text(),
  occupancy_type: text(),
  mortgage_company: text(),
  distance_to_fire_station_miles: numeric({ precision: 5, scale: 2 }),
  distance_to_coast_miles: numeric({ precision: 5, scale: 2 }),
  flood_zone: text(),
  wildfire_risk: text(),
  earthquake_risk: text(),
  current_coverage: jsonb().default('{}'),
  claims_history: jsonb().default('[]'),
  replacement_cost: numeric({ precision: 12, scale: 2 }),
  market_value: numeric({ precision: 12, scale: 2 }),
  ai_risk_score: integer(),
  ai_risk_factors: jsonb().default('[]'),
  ai_replacement_cost_estimate: numeric({ precision: 12, scale: 2 }),
  custom_fields: jsonb().default('{}'),
  is_active: boolean().default(true),
  created_at: timestamp({ withTimezone: true }).default(sql`now()`),
  updated_at: timestamp({ withTimezone: true }).default(sql`now()`),
});

export type Properties = typeof properties.$inferSelect;
export type NewProperties = typeof properties.$inferInsert;
