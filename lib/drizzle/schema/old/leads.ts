import { pgTable, uuid, text, date, numeric, jsonb, integer, timestamp, boolean } from 'drizzle-orm/pg-core';
import { sql } from 'drizzle-orm';

export const leads = pgTable('leads', {
  id: uuid().notNull().primaryKey().default(sql`uuid_generate_v4()`),
  assigned_to: uuid(),
  lead_type: text().default('Personal'),
  priority: text().default('Medium'),
  current_carrier: text(),
  current_policy_expiry: date(),
  premium: numeric({ precision: 10, scale: 2 }),
  auto_premium: numeric({ precision: 10, scale: 2 }),
  home_premium: numeric({ precision: 10, scale: 2 }),
  specialty_premium: numeric({ precision: 10, scale: 2 }),
  commercial_premium: numeric({ precision: 10, scale: 2 }),
  auto_data: jsonb().default('{}'),
  auto_data_version: integer().default(1),
  home_data: jsonb().default('{}'),
  home_data_version: integer().default(1),
  specialty_data: jsonb().default('{}'),
  specialty_data_version: integer().default(1),
  commercial_data: jsonb().default('{}'),
  commercial_data_version: integer().default(1),
  liability_data: jsonb().default('{}'),
  liability_data_version: integer().default(1),
  additional_insureds: jsonb().default('[]'),
  additional_locations: jsonb().default('[]'),
  drivers: jsonb().default('[]'),
  vehicles: jsonb().default('[]'),
  ai_summary: text(),
  ai_next_action: text(),
  ai_quote_recommendation: text(),
  ai_follow_up_priority: integer(),
  ai_conversion_probability: numeric({ precision: 5, scale: 2 }),
  ai_insights: jsonb().default('{}'),
  campaign_id: uuid(),
  ab_test_id: uuid(),
  content_template_id: uuid(),
  attribution_data: jsonb().default('{}'),
  metadata: jsonb().default('{}'),
  tags: text().array().default('{}'),
  notes: text(),
  custom_fields: jsonb().default('{}'),
  source: text().default('Manual Entry'),
  import_file_name: text(),
  import_batch_id: uuid(),
  status: text().default('New'),
  created_by: uuid(),
  updated_by: uuid(),
  created_at: timestamp({ withTimezone: true }).default(sql`now()`),
  updated_at: timestamp({ withTimezone: true }).default(sql`now()`),
  status_changed_at: timestamp({ withTimezone: true }).default(sql`now()`),
  last_contact_at: timestamp({ withTimezone: true }),
  next_contact_at: timestamp({ withTimezone: true }),
  quote_generated_at: timestamp({ withTimezone: true }),
  sold_at: timestamp({ withTimezone: true }),
  lost_at: timestamp({ withTimezone: true }),
  hibernated_at: timestamp({ withTimezone: true }),
  pipeline_id: integer(),
  pipeline_status_id: integer(),
  insurance_type_id: integer(),
  lead_status_id: integer(),
  converted_to_client_id: uuid(),
  conversion_date: timestamp({ withTimezone: true }),
  is_converted: boolean().default(false),
});

export type Leads = typeof leads.$inferSelect;
export type NewLeads = typeof leads.$inferInsert;
