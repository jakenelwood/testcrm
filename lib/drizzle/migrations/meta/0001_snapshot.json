{
  "id": "4d200fdc-23fe-4e74-99d6-afd126603a88",
  "prevId": "ee7b167a-e482-44b9-bf4b-7c81209446c7",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.ab_tests": {
      "name": "ab_tests",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "campaign_id": {
          "name": "campaign_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "hypothesis": {
          "name": "hypothesis",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "test_type": {
          "name": "test_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "variants": {
          "name": "variants",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "traffic_allocation": {
          "name": "traffic_allocation",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\"control\":50,\"variant_a\":50}'::jsonb"
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'draft'"
        },
        "start_date": {
          "name": "start_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "end_date": {
          "name": "end_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "success_metric": {
          "name": "success_metric",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "minimum_sample_size": {
          "name": "minimum_sample_size",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 100
        },
        "confidence_level": {
          "name": "confidence_level",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'95.0'"
        },
        "statistical_significance": {
          "name": "statistical_significance",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "winner_variant": {
          "name": "winner_variant",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "results": {
          "name": "results",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "ai_analysis": {
          "name": "ai_analysis",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "ai_recommendations": {
          "name": "ai_recommendations",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_ab_tests_campaign_id": {
          "name": "idx_ab_tests_campaign_id",
          "columns": [
            {
              "expression": "campaign_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_ab_tests_status": {
          "name": "idx_ab_tests_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_ab_tests_workspace_id": {
          "name": "idx_ab_tests_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "ab_tests_campaign_id_fkey": {
          "name": "ab_tests_campaign_id_fkey",
          "tableFrom": "ab_tests",
          "tableTo": "campaigns",
          "columnsFrom": [
            "campaign_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "ab_tests_workspace_id_fkey": {
          "name": "ab_tests_workspace_id_fkey",
          "tableFrom": "ab_tests",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can delete ab_tests in their workspace": {
          "name": "Users can delete ab_tests in their workspace",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "(workspace_id = ( SELECT users.workspace_id\n   FROM users\n  WHERE (users.id = auth.uid())))"
        },
        "Users can update ab_tests in their workspace": {
          "name": "Users can update ab_tests in their workspace",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Users can create ab_tests in their workspace": {
          "name": "Users can create ab_tests in their workspace",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can view ab_tests in their workspace": {
          "name": "Users can view ab_tests in their workspace",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "ab_tests_status_check": {
          "name": "ab_tests_status_check",
          "value": "status = ANY (ARRAY['draft'::text, 'running'::text, 'completed'::text, 'cancelled'::text])"
        },
        "ab_tests_test_type_check": {
          "name": "ab_tests_test_type_check",
          "value": "test_type = ANY (ARRAY['subject_line'::text, 'content'::text, 'send_time'::text, 'call_script'::text, 'landing_page'::text, 'offer'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.accounts": {
      "name": "accounts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "website": {
          "name": "website",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "industry": {
          "name": "industry",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "employee_count": {
          "name": "employee_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "annual_revenue": {
          "name": "annual_revenue",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "business_type": {
          "name": "business_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tax_id": {
          "name": "tax_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "duns_number": {
          "name": "duns_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "current_carriers": {
          "name": "current_carriers",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "policy_renewal_dates": {
          "name": "policy_renewal_dates",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "risk_profile": {
          "name": "risk_profile",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "summary_embedding": {
          "name": "summary_embedding",
          "type": "vector(1024)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_risk_score": {
          "name": "ai_risk_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "ai_lifetime_value": {
          "name": "ai_lifetime_value",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_insights": {
          "name": "ai_insights",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "custom_fields": {
          "name": "custom_fields",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "tags": {
          "name": "tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "owner_id": {
          "name": "owner_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_accounts_industry": {
          "name": "idx_accounts_industry",
          "columns": [
            {
              "expression": "industry",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_accounts_name": {
          "name": "idx_accounts_name",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_accounts_owner_id": {
          "name": "idx_accounts_owner_id",
          "columns": [
            {
              "expression": "owner_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_accounts_summary_embedding_hnsw": {
          "name": "idx_accounts_summary_embedding_hnsw",
          "columns": [
            {
              "expression": "summary_embedding",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "vector_ip_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hnsw",
          "with": {
            "m": "32",
            "ef_construction": "128"
          }
        },
        "idx_accounts_workspace_id": {
          "name": "idx_accounts_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "accounts_owner_id_fkey": {
          "name": "accounts_owner_id_fkey",
          "tableFrom": "accounts",
          "tableTo": "users",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "accounts_workspace_id_fkey": {
          "name": "accounts_workspace_id_fkey",
          "tableFrom": "accounts",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can delete owned accounts": {
          "name": "Users can delete owned accounts",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "((workspace_id = get_user_workspace_id()) AND ((owner_id = auth.uid()) OR is_workspace_admin()))"
        },
        "Users can update owned accounts": {
          "name": "Users can update owned accounts",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Users can create accounts": {
          "name": "Users can create accounts",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can view workspace accounts": {
          "name": "Users can view workspace accounts",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "accounts_ai_risk_score_check": {
          "name": "accounts_ai_risk_score_check",
          "value": "(ai_risk_score >= 0) AND (ai_risk_score <= 100)"
        },
        "chk_accounts_valid_risk_score": {
          "name": "chk_accounts_valid_risk_score",
          "value": "(ai_risk_score IS NULL) OR ((ai_risk_score >= 0) AND (ai_risk_score <= 100))"
        }
      },
      "isRLSEnabled": false
    },
    "public.campaign_metrics": {
      "name": "campaign_metrics",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "campaign_id": {
          "name": "campaign_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "ab_test_id": {
          "name": "ab_test_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "sent_at": {
          "name": "sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "delivered_at": {
          "name": "delivered_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "opened_at": {
          "name": "opened_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "clicked_at": {
          "name": "clicked_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "responded_at": {
          "name": "responded_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "converted_at": {
          "name": "converted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "variant_shown": {
          "name": "variant_shown",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "conversion_value": {
          "name": "conversion_value",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "attribution_weight": {
          "name": "attribution_weight",
          "type": "numeric(5, 4)",
          "primaryKey": false,
          "notNull": false,
          "default": "'1.0'"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_campaign_metrics_campaign_id": {
          "name": "idx_campaign_metrics_campaign_id",
          "columns": [
            {
              "expression": "campaign_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_metrics_contact_id": {
          "name": "idx_campaign_metrics_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_metrics_workspace_id": {
          "name": "idx_campaign_metrics_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "campaign_metrics_ab_test_id_fkey": {
          "name": "campaign_metrics_ab_test_id_fkey",
          "tableFrom": "campaign_metrics",
          "tableTo": "ab_tests",
          "columnsFrom": [
            "ab_test_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "campaign_metrics_account_id_fkey": {
          "name": "campaign_metrics_account_id_fkey",
          "tableFrom": "campaign_metrics",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "campaign_metrics_campaign_id_fkey": {
          "name": "campaign_metrics_campaign_id_fkey",
          "tableFrom": "campaign_metrics",
          "tableTo": "campaigns",
          "columnsFrom": [
            "campaign_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_metrics_contact_id_fkey": {
          "name": "campaign_metrics_contact_id_fkey",
          "tableFrom": "campaign_metrics",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_metrics_workspace_id_fkey": {
          "name": "campaign_metrics_workspace_id_fkey",
          "tableFrom": "campaign_metrics",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can update campaign_metrics in their workspace": {
          "name": "Users can update campaign_metrics in their workspace",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "(workspace_id = ( SELECT users.workspace_id\n   FROM users\n  WHERE (users.id = auth.uid())))"
        },
        "Users can create campaign_metrics in their workspace": {
          "name": "Users can create campaign_metrics in their workspace",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can view campaign_metrics in their workspace": {
          "name": "Users can view campaign_metrics in their workspace",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.campaign_participants": {
      "name": "campaign_participants",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "campaign_id": {
          "name": "campaign_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "ab_test_id": {
          "name": "ab_test_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "variant_assigned": {
          "name": "variant_assigned",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "assigned_at": {
          "name": "assigned_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "is_current": {
          "name": "is_current",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "ended_at": {
          "name": "ended_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "end_reason": {
          "name": "end_reason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "excluded": {
          "name": "excluded",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "exclusion_reason": {
          "name": "exclusion_reason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        }
      },
      "indexes": {
        "idx_campaign_participants_account_id": {
          "name": "idx_campaign_participants_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_participants_campaign_id": {
          "name": "idx_campaign_participants_campaign_id",
          "columns": [
            {
              "expression": "campaign_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_participants_contact_id": {
          "name": "idx_campaign_participants_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_participants_is_current": {
          "name": "idx_campaign_participants_is_current",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "where": "(is_current = true)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_participants_workspace_id": {
          "name": "idx_campaign_participants_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "campaign_participants_ab_test_id_fkey": {
          "name": "campaign_participants_ab_test_id_fkey",
          "tableFrom": "campaign_participants",
          "tableTo": "ab_tests",
          "columnsFrom": [
            "ab_test_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "campaign_participants_account_id_fkey": {
          "name": "campaign_participants_account_id_fkey",
          "tableFrom": "campaign_participants",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "campaign_participants_campaign_id_fkey": {
          "name": "campaign_participants_campaign_id_fkey",
          "tableFrom": "campaign_participants",
          "tableTo": "campaigns",
          "columnsFrom": [
            "campaign_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_participants_contact_id_fkey": {
          "name": "campaign_participants_contact_id_fkey",
          "tableFrom": "campaign_participants",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_participants_workspace_id_fkey": {
          "name": "campaign_participants_workspace_id_fkey",
          "tableFrom": "campaign_participants",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_current_campaign_per_contact": {
          "name": "unique_current_campaign_per_contact",
          "nullsNotDistinct": false,
          "columns": [
            "contact_id"
          ]
        }
      },
      "policies": {
        "Users can update campaign_participants in their workspace": {
          "name": "Users can update campaign_participants in their workspace",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "(workspace_id = ( SELECT users.workspace_id\n   FROM users\n  WHERE (users.id = auth.uid())))"
        },
        "Users can create campaign_participants in their workspace": {
          "name": "Users can create campaign_participants in their workspace",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can view campaign_participants in their workspace": {
          "name": "Users can view campaign_participants in their workspace",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.campaign_step_runs": {
      "name": "campaign_step_runs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "campaign_id": {
          "name": "campaign_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "step_id": {
          "name": "step_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "channel": {
          "name": "channel",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "resolved_payload": {
          "name": "resolved_payload",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'queued'"
        },
        "provider_message_id": {
          "name": "provider_message_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "n8n_execution_id": {
          "name": "n8n_execution_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "error_json": {
          "name": "error_json",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "sent_at": {
          "name": "sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_campaign_step_runs_campaign": {
          "name": "idx_campaign_step_runs_campaign",
          "columns": [
            {
              "expression": "campaign_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_step_runs_target": {
          "name": "idx_campaign_step_runs_target",
          "columns": [
            {
              "expression": "target_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_step_runs_workspace": {
          "name": "idx_campaign_step_runs_workspace",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "campaign_step_runs_campaign_id_fkey": {
          "name": "campaign_step_runs_campaign_id_fkey",
          "tableFrom": "campaign_step_runs",
          "tableTo": "campaigns",
          "columnsFrom": [
            "campaign_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_step_runs_target_id_fkey": {
          "name": "campaign_step_runs_target_id_fkey",
          "tableFrom": "campaign_step_runs",
          "tableTo": "campaign_targets",
          "columnsFrom": [
            "target_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_step_runs_step_id_fkey": {
          "name": "campaign_step_runs_step_id_fkey",
          "tableFrom": "campaign_step_runs",
          "tableTo": "campaign_steps",
          "columnsFrom": [
            "step_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_step_runs_workspace_id_fkey": {
          "name": "campaign_step_runs_workspace_id_fkey",
          "tableFrom": "campaign_step_runs",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "campaign_step_runs_status_check": {
          "name": "campaign_step_runs_status_check",
          "value": "status = ANY (ARRAY['queued'::text, 'sent'::text, 'bounced'::text, 'failed'::text, 'skipped'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.campaign_steps": {
      "name": "campaign_steps",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "campaign_id": {
          "name": "campaign_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "step_number": {
          "name": "step_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "template_id": {
          "name": "template_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "wait_after_ms": {
          "name": "wait_after_ms",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "condition": {
          "name": "condition",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "branch_label": {
          "name": "branch_label",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_campaign_steps_campaign": {
          "name": "idx_campaign_steps_campaign",
          "columns": [
            {
              "expression": "campaign_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_steps_workspace": {
          "name": "idx_campaign_steps_workspace",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "campaign_steps_campaign_id_fkey": {
          "name": "campaign_steps_campaign_id_fkey",
          "tableFrom": "campaign_steps",
          "tableTo": "campaigns",
          "columnsFrom": [
            "campaign_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_steps_template_id_fkey": {
          "name": "campaign_steps_template_id_fkey",
          "tableFrom": "campaign_steps",
          "tableTo": "campaign_templates",
          "columnsFrom": [
            "template_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "campaign_steps_workspace_id_fkey": {
          "name": "campaign_steps_workspace_id_fkey",
          "tableFrom": "campaign_steps",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.campaign_target_overrides": {
      "name": "campaign_target_overrides",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "campaign_id": {
          "name": "campaign_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "target_id": {
          "name": "target_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "step_id": {
          "name": "step_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "overrides_json": {
          "name": "overrides_json",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_campaign_target_overrides_campaign": {
          "name": "idx_campaign_target_overrides_campaign",
          "columns": [
            {
              "expression": "campaign_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_target_overrides_target": {
          "name": "idx_campaign_target_overrides_target",
          "columns": [
            {
              "expression": "target_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "campaign_target_overrides_campaign_id_fkey": {
          "name": "campaign_target_overrides_campaign_id_fkey",
          "tableFrom": "campaign_target_overrides",
          "tableTo": "campaigns",
          "columnsFrom": [
            "campaign_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_target_overrides_target_id_fkey": {
          "name": "campaign_target_overrides_target_id_fkey",
          "tableFrom": "campaign_target_overrides",
          "tableTo": "campaign_targets",
          "columnsFrom": [
            "target_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_target_overrides_step_id_fkey": {
          "name": "campaign_target_overrides_step_id_fkey",
          "tableFrom": "campaign_target_overrides",
          "tableTo": "campaign_steps",
          "columnsFrom": [
            "step_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_target_overrides_workspace_id_fkey": {
          "name": "campaign_target_overrides_workspace_id_fkey",
          "tableFrom": "campaign_target_overrides",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.campaign_targets": {
      "name": "campaign_targets",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "campaign_id": {
          "name": "campaign_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "opportunity_id": {
          "name": "opportunity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "next_step_number": {
          "name": "next_step_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 1
        },
        "last_attempt_at": {
          "name": "last_attempt_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "assigned_at": {
          "name": "assigned_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_campaign_targets_campaign": {
          "name": "idx_campaign_targets_campaign",
          "columns": [
            {
              "expression": "campaign_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_targets_opportunity": {
          "name": "idx_campaign_targets_opportunity",
          "columns": [
            {
              "expression": "opportunity_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_targets_workspace": {
          "name": "idx_campaign_targets_workspace",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "campaign_targets_campaign_id_fkey": {
          "name": "campaign_targets_campaign_id_fkey",
          "tableFrom": "campaign_targets",
          "tableTo": "campaigns",
          "columnsFrom": [
            "campaign_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_targets_opportunity_id_fkey": {
          "name": "campaign_targets_opportunity_id_fkey",
          "tableFrom": "campaign_targets",
          "tableTo": "opportunities",
          "columnsFrom": [
            "opportunity_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_targets_contact_id_fkey": {
          "name": "campaign_targets_contact_id_fkey",
          "tableFrom": "campaign_targets",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "campaign_targets_account_id_fkey": {
          "name": "campaign_targets_account_id_fkey",
          "tableFrom": "campaign_targets",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "campaign_targets_workspace_id_fkey": {
          "name": "campaign_targets_workspace_id_fkey",
          "tableFrom": "campaign_targets",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "campaign_targets_state_check": {
          "name": "campaign_targets_state_check",
          "value": "state = ANY (ARRAY['pending'::text, 'in_progress'::text, 'completed'::text, 'suppressed'::text, 'failed'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.campaign_templates": {
      "name": "campaign_templates",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "campaign_id": {
          "name": "campaign_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "channel": {
          "name": "channel",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "variables_schema": {
          "name": "variables_schema",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "subject_template": {
          "name": "subject_template",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "body_template": {
          "name": "body_template",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_metadata": {
          "name": "provider_metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_campaign_templates_campaign": {
          "name": "idx_campaign_templates_campaign",
          "columns": [
            {
              "expression": "campaign_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_templates_workspace": {
          "name": "idx_campaign_templates_workspace",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "campaign_templates_campaign_id_fkey": {
          "name": "campaign_templates_campaign_id_fkey",
          "tableFrom": "campaign_templates",
          "tableTo": "campaigns",
          "columnsFrom": [
            "campaign_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_templates_workspace_id_fkey": {
          "name": "campaign_templates_workspace_id_fkey",
          "tableFrom": "campaign_templates",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can view campaign_templates in workspace": {
          "name": "Users can view campaign_templates in workspace",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Users can create campaign_templates in workspace": {
          "name": "Users can create campaign_templates in workspace",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can update campaign_templates in workspace": {
          "name": "Users can update campaign_templates in workspace",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.campaign_transitions": {
      "name": "campaign_transitions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "from_campaign_id": {
          "name": "from_campaign_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "to_campaign_id": {
          "name": "to_campaign_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "transition_reason": {
          "name": "transition_reason",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "transition_data": {
          "name": "transition_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "transitioned_at": {
          "name": "transitioned_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "transitioned_by": {
          "name": "transitioned_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_campaign_transitions_contact_id": {
          "name": "idx_campaign_transitions_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_transitions_from_campaign": {
          "name": "idx_campaign_transitions_from_campaign",
          "columns": [
            {
              "expression": "from_campaign_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_transitions_to_campaign": {
          "name": "idx_campaign_transitions_to_campaign",
          "columns": [
            {
              "expression": "to_campaign_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaign_transitions_workspace_id": {
          "name": "idx_campaign_transitions_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "campaign_transitions_contact_id_fkey": {
          "name": "campaign_transitions_contact_id_fkey",
          "tableFrom": "campaign_transitions",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "campaign_transitions_from_campaign_id_fkey": {
          "name": "campaign_transitions_from_campaign_id_fkey",
          "tableFrom": "campaign_transitions",
          "tableTo": "campaigns",
          "columnsFrom": [
            "from_campaign_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "campaign_transitions_to_campaign_id_fkey": {
          "name": "campaign_transitions_to_campaign_id_fkey",
          "tableFrom": "campaign_transitions",
          "tableTo": "campaigns",
          "columnsFrom": [
            "to_campaign_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "campaign_transitions_transitioned_by_fkey": {
          "name": "campaign_transitions_transitioned_by_fkey",
          "tableFrom": "campaign_transitions",
          "tableTo": "users",
          "columnsFrom": [
            "transitioned_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "campaign_transitions_workspace_id_fkey": {
          "name": "campaign_transitions_workspace_id_fkey",
          "tableFrom": "campaign_transitions",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can create campaign_transitions in their workspace": {
          "name": "Users can create campaign_transitions in their workspace",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ],
          "withCheck": "(workspace_id = ( SELECT users.workspace_id\n   FROM users\n  WHERE (users.id = auth.uid())))"
        },
        "Users can view campaign_transitions in their workspace": {
          "name": "Users can view campaign_transitions in their workspace",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.campaigns": {
      "name": "campaigns",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "campaign_type": {
          "name": "campaign_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "objective": {
          "name": "objective",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "audience_criteria": {
          "name": "audience_criteria",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "exclusion_criteria": {
          "name": "exclusion_criteria",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'draft'"
        },
        "start_date": {
          "name": "start_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "end_date": {
          "name": "end_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "budget": {
          "name": "budget",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "target_metrics": {
          "name": "target_metrics",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "ai_optimization_enabled": {
          "name": "ai_optimization_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "automation_rules": {
          "name": "automation_rules",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "total_targeted": {
          "name": "total_targeted",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "total_sent": {
          "name": "total_sent",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "total_delivered": {
          "name": "total_delivered",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "total_opened": {
          "name": "total_opened",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "total_clicked": {
          "name": "total_clicked",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "total_converted": {
          "name": "total_converted",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "owner_id": {
          "name": "owner_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_campaigns_campaign_type": {
          "name": "idx_campaigns_campaign_type",
          "columns": [
            {
              "expression": "campaign_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaigns_owner_id": {
          "name": "idx_campaigns_owner_id",
          "columns": [
            {
              "expression": "owner_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaigns_start_date": {
          "name": "idx_campaigns_start_date",
          "columns": [
            {
              "expression": "start_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaigns_status": {
          "name": "idx_campaigns_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_campaigns_workspace_id": {
          "name": "idx_campaigns_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "campaigns_owner_id_fkey": {
          "name": "campaigns_owner_id_fkey",
          "tableFrom": "campaigns",
          "tableTo": "users",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "campaigns_workspace_id_fkey": {
          "name": "campaigns_workspace_id_fkey",
          "tableFrom": "campaigns",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can delete campaigns in their workspace": {
          "name": "Users can delete campaigns in their workspace",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "(workspace_id = ( SELECT users.workspace_id\n   FROM users\n  WHERE (users.id = auth.uid())))"
        },
        "Users can update campaigns in their workspace": {
          "name": "Users can update campaigns in their workspace",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Users can create campaigns in their workspace": {
          "name": "Users can create campaigns in their workspace",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can view campaigns in their workspace": {
          "name": "Users can view campaigns in their workspace",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "campaigns_campaign_type_check": {
          "name": "campaigns_campaign_type_check",
          "value": "campaign_type = ANY (ARRAY['email'::text, 'sms'::text, 'phone'::text, 'social'::text, 'direct_mail'::text, 'multi_channel'::text, 'ai_automated'::text, 'ai_nurture'::text, 'on_hold'::text, 'reengagement'::text])"
        },
        "campaigns_objective_check": {
          "name": "campaigns_objective_check",
          "value": "objective = ANY (ARRAY['lead_generation'::text, 'nurture'::text, 'conversion'::text, 'retention'::text, 'winback'::text, 'ai_qualification'::text, 'ai_nurture'::text, 'hold_management'::text, 'reengagement'::text])"
        },
        "campaigns_status_check": {
          "name": "campaigns_status_check",
          "value": "status = ANY (ARRAY['draft'::text, 'active'::text, 'paused'::text, 'completed'::text, 'cancelled'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.contacts": {
      "name": "contacts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "first_name": {
          "name": "first_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "last_name": {
          "name": "last_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "mobile_phone": {
          "name": "mobile_phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "date_of_birth": {
          "name": "date_of_birth",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "gender": {
          "name": "gender",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "marital_status": {
          "name": "marital_status",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "occupation": {
          "name": "occupation",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "job_title": {
          "name": "job_title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "department": {
          "name": "department",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "drivers_license": {
          "name": "drivers_license",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "license_state": {
          "name": "license_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ssn_last_four": {
          "name": "ssn_last_four",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "lifecycle_stage": {
          "name": "lifecycle_stage",
          "type": "contact_lifecycle_stage",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'lead'"
        },
        "lead_source": {
          "name": "lead_source",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "referred_by": {
          "name": "referred_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "summary_embedding": {
          "name": "summary_embedding",
          "type": "vector(1024)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_risk_score": {
          "name": "ai_risk_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "ai_lifetime_value": {
          "name": "ai_lifetime_value",
          "type": "numeric(15, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_churn_probability": {
          "name": "ai_churn_probability",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_insights": {
          "name": "ai_insights",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "preferred_contact_method": {
          "name": "preferred_contact_method",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'email'"
        },
        "communication_preferences": {
          "name": "communication_preferences",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "custom_fields": {
          "name": "custom_fields",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "tags": {
          "name": "tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "last_contact_at": {
          "name": "last_contact_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "next_contact_at": {
          "name": "next_contact_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "owner_id": {
          "name": "owner_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "current_campaign_id": {
          "name": "current_campaign_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "campaign_assigned_at": {
          "name": "campaign_assigned_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "hold_until": {
          "name": "hold_until",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "hold_reason": {
          "name": "hold_reason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "hold_requested_by": {
          "name": "hold_requested_by",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "hold_notes": {
          "name": "hold_notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "auto_reengagement_enabled": {
          "name": "auto_reengagement_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        }
      },
      "indexes": {
        "idx_contacts_account_id": {
          "name": "idx_contacts_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_contacts_campaign_assigned_at": {
          "name": "idx_contacts_campaign_assigned_at",
          "columns": [
            {
              "expression": "campaign_assigned_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_contacts_current_campaign_id": {
          "name": "idx_contacts_current_campaign_id",
          "columns": [
            {
              "expression": "current_campaign_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_contacts_email": {
          "name": "idx_contacts_email",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_contacts_hold_until": {
          "name": "idx_contacts_hold_until",
          "columns": [
            {
              "expression": "hold_until",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(lifecycle_stage = 'on_hold'::contact_lifecycle_stage)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_contacts_lifecycle_stage": {
          "name": "idx_contacts_lifecycle_stage",
          "columns": [
            {
              "expression": "lifecycle_stage",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_contacts_name": {
          "name": "idx_contacts_name",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "first_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "last_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_contacts_owner_id": {
          "name": "idx_contacts_owner_id",
          "columns": [
            {
              "expression": "owner_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_contacts_summary_embedding_hnsw": {
          "name": "idx_contacts_summary_embedding_hnsw",
          "columns": [
            {
              "expression": "summary_embedding",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "vector_ip_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hnsw",
          "with": {
            "m": "32",
            "ef_construction": "128"
          }
        },
        "idx_contacts_workspace_id": {
          "name": "idx_contacts_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_contacts_workspace_lifecycle": {
          "name": "idx_contacts_workspace_lifecycle",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "lifecycle_stage",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "contacts_account_id_fkey": {
          "name": "contacts_account_id_fkey",
          "tableFrom": "contacts",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "contacts_owner_id_fkey": {
          "name": "contacts_owner_id_fkey",
          "tableFrom": "contacts",
          "tableTo": "users",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "contacts_referred_by_fkey": {
          "name": "contacts_referred_by_fkey",
          "tableFrom": "contacts",
          "tableTo": "contacts",
          "columnsFrom": [
            "referred_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "contacts_workspace_id_fkey": {
          "name": "contacts_workspace_id_fkey",
          "tableFrom": "contacts",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "fk_contacts_current_campaign": {
          "name": "fk_contacts_current_campaign",
          "tableFrom": "contacts",
          "tableTo": "campaigns",
          "columnsFrom": [
            "current_campaign_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_contact_email_in_workspace": {
          "name": "unique_contact_email_in_workspace",
          "nullsNotDistinct": false,
          "columns": [
            "workspace_id",
            "email"
          ]
        }
      },
      "policies": {
        "Users can delete owned contacts": {
          "name": "Users can delete owned contacts",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "((workspace_id = get_user_workspace_id()) AND ((owner_id = auth.uid()) OR is_workspace_admin()))"
        },
        "Users can update owned contacts": {
          "name": "Users can update owned contacts",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Users can create contacts": {
          "name": "Users can create contacts",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can view workspace contacts": {
          "name": "Users can view workspace contacts",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "chk_contacts_valid_churn_probability": {
          "name": "chk_contacts_valid_churn_probability",
          "value": "(ai_churn_probability IS NULL) OR ((ai_churn_probability >= (0)::numeric) AND (ai_churn_probability <= (100)::numeric))"
        },
        "chk_contacts_valid_risk_score": {
          "name": "chk_contacts_valid_risk_score",
          "value": "(ai_risk_score IS NULL) OR ((ai_risk_score >= 0) AND (ai_risk_score <= 100))"
        },
        "contacts_ai_churn_probability_check": {
          "name": "contacts_ai_churn_probability_check",
          "value": "(ai_churn_probability >= (0)::numeric) AND (ai_churn_probability <= (100)::numeric)"
        },
        "contacts_ai_risk_score_check": {
          "name": "contacts_ai_risk_score_check",
          "value": "(ai_risk_score >= 0) AND (ai_risk_score <= 100)"
        },
        "contacts_hold_requested_by_check": {
          "name": "contacts_hold_requested_by_check",
          "value": "hold_requested_by = ANY (ARRAY['customer'::text, 'agent'::text, 'compliance'::text])"
        },
        "contacts_preferred_contact_method_check": {
          "name": "contacts_preferred_contact_method_check",
          "value": "preferred_contact_method = ANY (ARRAY['email'::text, 'phone'::text, 'sms'::text, 'mail'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.documents": {
      "name": "documents",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "file_name": {
          "name": "file_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_path": {
          "name": "file_path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_size_bytes": {
          "name": "file_size_bytes",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "mime_type": {
          "name": "mime_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "file_hash": {
          "name": "file_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "opportunity_id": {
          "name": "opportunity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "uploaded_by_id": {
          "name": "uploaded_by_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "document_type": {
          "name": "document_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(1024)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_extracted_text": {
          "name": "ai_extracted_text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ai_summary": {
          "name": "ai_summary",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ai_document_classification": {
          "name": "ai_document_classification",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "ai_key_entities": {
          "name": "ai_key_entities",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "tags": {
          "name": "tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "is_confidential": {
          "name": "is_confidential",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "retention_date": {
          "name": "retention_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_documents_account_id": {
          "name": "idx_documents_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_documents_contact_id": {
          "name": "idx_documents_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_documents_embedding_hnsw": {
          "name": "idx_documents_embedding_hnsw",
          "columns": [
            {
              "expression": "embedding",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "vector_ip_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hnsw",
          "with": {
            "m": "32",
            "ef_construction": "128"
          }
        },
        "idx_documents_type": {
          "name": "idx_documents_type",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "document_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_documents_workspace_id": {
          "name": "idx_documents_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "documents_account_id_fkey": {
          "name": "documents_account_id_fkey",
          "tableFrom": "documents",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "documents_contact_id_fkey": {
          "name": "documents_contact_id_fkey",
          "tableFrom": "documents",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "documents_opportunity_id_fkey": {
          "name": "documents_opportunity_id_fkey",
          "tableFrom": "documents",
          "tableTo": "opportunities",
          "columnsFrom": [
            "opportunity_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "documents_uploaded_by_id_fkey": {
          "name": "documents_uploaded_by_id_fkey",
          "tableFrom": "documents",
          "tableTo": "users",
          "columnsFrom": [
            "uploaded_by_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "documents_workspace_id_fkey": {
          "name": "documents_workspace_id_fkey",
          "tableFrom": "documents",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can update own documents": {
          "name": "Users can update own documents",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "((workspace_id = get_user_workspace_id()) AND ((uploaded_by_id = auth.uid()) OR is_workspace_admin()))"
        },
        "Users can upload documents": {
          "name": "Users can upload documents",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can view workspace documents": {
          "name": "Users can view workspace documents",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "documents_document_type_check": {
          "name": "documents_document_type_check",
          "value": "document_type = ANY (ARRAY['quote'::text, 'policy'::text, 'application'::text, 'claim'::text, 'correspondence'::text, 'other'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.insurance_policies": {
      "name": "insurance_policies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "opportunity_id": {
          "name": "opportunity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "policy_number": {
          "name": "policy_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "carrier": {
          "name": "carrier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "policy_type": {
          "name": "policy_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "premium_amount": {
          "name": "premium_amount",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "deductible": {
          "name": "deductible",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "coverage_limit": {
          "name": "coverage_limit",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "effective_date": {
          "name": "effective_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "expiration_date": {
          "name": "expiration_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "policy_details": {
          "name": "policy_details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'active'"
        },
        "owner_id": {
          "name": "owner_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_insurance_policies_account_id": {
          "name": "idx_insurance_policies_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_insurance_policies_carrier": {
          "name": "idx_insurance_policies_carrier",
          "columns": [
            {
              "expression": "carrier",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_insurance_policies_contact_id": {
          "name": "idx_insurance_policies_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_insurance_policies_expiration": {
          "name": "idx_insurance_policies_expiration",
          "columns": [
            {
              "expression": "expiration_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "date_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_insurance_policies_opportunity_id": {
          "name": "idx_insurance_policies_opportunity_id",
          "columns": [
            {
              "expression": "opportunity_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_insurance_policies_policy_number": {
          "name": "idx_insurance_policies_policy_number",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "policy_number",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_insurance_policies_status": {
          "name": "idx_insurance_policies_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_insurance_policies_workspace_id": {
          "name": "idx_insurance_policies_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "insurance_policies_account_id_fkey": {
          "name": "insurance_policies_account_id_fkey",
          "tableFrom": "insurance_policies",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "insurance_policies_contact_id_fkey": {
          "name": "insurance_policies_contact_id_fkey",
          "tableFrom": "insurance_policies",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "insurance_policies_opportunity_id_fkey": {
          "name": "insurance_policies_opportunity_id_fkey",
          "tableFrom": "insurance_policies",
          "tableTo": "opportunities",
          "columnsFrom": [
            "opportunity_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "insurance_policies_owner_id_fkey": {
          "name": "insurance_policies_owner_id_fkey",
          "tableFrom": "insurance_policies",
          "tableTo": "users",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "insurance_policies_workspace_id_fkey": {
          "name": "insurance_policies_workspace_id_fkey",
          "tableFrom": "insurance_policies",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "insurance_policies_policy_type_check": {
          "name": "insurance_policies_policy_type_check",
          "value": "policy_type = ANY (ARRAY['auto'::text, 'home'::text, 'life'::text, 'business'::text, 'health'::text, 'umbrella'::text, 'specialty'::text])"
        },
        "insurance_policies_status_check": {
          "name": "insurance_policies_status_check",
          "value": "status = ANY (ARRAY['active'::text, 'cancelled'::text, 'expired'::text, 'pending'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.insurance_quotes": {
      "name": "insurance_quotes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "opportunity_id": {
          "name": "opportunity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "quote_number": {
          "name": "quote_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "carrier": {
          "name": "carrier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "insurance_type": {
          "name": "insurance_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "quoted_premium": {
          "name": "quoted_premium",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "deductible": {
          "name": "deductible",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "coverage_limits": {
          "name": "coverage_limits",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "quote_date": {
          "name": "quote_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_DATE"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "quote_details": {
          "name": "quote_details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "created_by_id": {
          "name": "created_by_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_insurance_quotes_account_id": {
          "name": "idx_insurance_quotes_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_insurance_quotes_carrier": {
          "name": "idx_insurance_quotes_carrier",
          "columns": [
            {
              "expression": "carrier",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_insurance_quotes_contact_id": {
          "name": "idx_insurance_quotes_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_insurance_quotes_expires_at": {
          "name": "idx_insurance_quotes_expires_at",
          "columns": [
            {
              "expression": "expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_insurance_quotes_opportunity_id": {
          "name": "idx_insurance_quotes_opportunity_id",
          "columns": [
            {
              "expression": "opportunity_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_insurance_quotes_status": {
          "name": "idx_insurance_quotes_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_insurance_quotes_workspace_id": {
          "name": "idx_insurance_quotes_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "insurance_quotes_account_id_fkey": {
          "name": "insurance_quotes_account_id_fkey",
          "tableFrom": "insurance_quotes",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "insurance_quotes_contact_id_fkey": {
          "name": "insurance_quotes_contact_id_fkey",
          "tableFrom": "insurance_quotes",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "insurance_quotes_created_by_id_fkey": {
          "name": "insurance_quotes_created_by_id_fkey",
          "tableFrom": "insurance_quotes",
          "tableTo": "users",
          "columnsFrom": [
            "created_by_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "insurance_quotes_opportunity_id_fkey": {
          "name": "insurance_quotes_opportunity_id_fkey",
          "tableFrom": "insurance_quotes",
          "tableTo": "opportunities",
          "columnsFrom": [
            "opportunity_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "insurance_quotes_workspace_id_fkey": {
          "name": "insurance_quotes_workspace_id_fkey",
          "tableFrom": "insurance_quotes",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "insurance_quotes_insurance_type_check": {
          "name": "insurance_quotes_insurance_type_check",
          "value": "insurance_type = ANY (ARRAY['auto'::text, 'home'::text, 'life'::text, 'business'::text, 'health'::text, 'umbrella'::text, 'specialty'::text])"
        },
        "insurance_quotes_status_check": {
          "name": "insurance_quotes_status_check",
          "value": "status = ANY (ARRAY['pending'::text, 'presented'::text, 'accepted'::text, 'declined'::text, 'expired'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.insurance_types": {
      "name": "insurance_types",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "icon_name": {
          "name": "icon_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "form_schema": {
          "name": "form_schema",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "required_fields": {
          "name": "required_fields",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\"\"}'"
        },
        "optional_fields": {
          "name": "optional_fields",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{\"\"}'"
        },
        "ai_prompt_template": {
          "name": "ai_prompt_template",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ai_risk_factors": {
          "name": "ai_risk_factors",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "ai_pricing_factors": {
          "name": "ai_pricing_factors",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "display_order": {
          "name": "display_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "color_hex": {
          "name": "color_hex",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "insurance_types_name_key": {
          "name": "insurance_types_name_key",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {
        "Users can view insurance types": {
          "name": "Users can view insurance types",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        }
      },
      "checkConstraints": {
        "insurance_types_category_check": {
          "name": "insurance_types_category_check",
          "value": "category = ANY (ARRAY['personal'::text, 'commercial'::text, 'specialty'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.interactions_2025_08": {
      "name": "interactions_2025_08",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "opportunity_id": {
          "name": "opportunity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "interaction_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "subject": {
          "name": "subject",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "direction": {
          "name": "direction",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "duration_minutes": {
          "name": "duration_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "outcome": {
          "name": "outcome",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "sentiment": {
          "name": "sentiment",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(1024)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_summary": {
          "name": "ai_summary",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ai_sentiment_score": {
          "name": "ai_sentiment_score",
          "type": "numeric(3, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_entities": {
          "name": "ai_entities",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "ai_action_items": {
          "name": "ai_action_items",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "ai_follow_up_suggestions": {
          "name": "ai_follow_up_suggestions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "interacted_at": {
          "name": "interacted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_interactions_2025_08_account": {
          "name": "idx_interactions_2025_08_account",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "interacted_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_interactions_2025_08_embedding_hnsw": {
          "name": "idx_interactions_2025_08_embedding_hnsw",
          "columns": [
            {
              "expression": "embedding",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "vector_ip_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hnsw",
          "with": {
            "m": "32",
            "ef_construction": "128"
          }
        },
        "idx_interactions_2025_08_type": {
          "name": "idx_interactions_2025_08_type",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            },
            {
              "expression": "interacted_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_interactions_2025_08_workspace_contact": {
          "name": "idx_interactions_2025_08_workspace_contact",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "interacted_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "interactions_2025_08_pkey": {
          "name": "interactions_2025_08_pkey",
          "columns": [
            "id",
            "interacted_at"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "interactions_ai_sentiment_score_check": {
          "name": "interactions_ai_sentiment_score_check",
          "value": "(ai_sentiment_score >= ('-1'::integer)::numeric) AND (ai_sentiment_score <= (1)::numeric)"
        },
        "interactions_direction_check": {
          "name": "interactions_direction_check",
          "value": "direction = ANY (ARRAY['inbound'::text, 'outbound'::text])"
        },
        "interactions_sentiment_check": {
          "name": "interactions_sentiment_check",
          "value": "sentiment = ANY (ARRAY['positive'::text, 'neutral'::text, 'negative'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.interactions_2025_09": {
      "name": "interactions_2025_09",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "opportunity_id": {
          "name": "opportunity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "interaction_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "subject": {
          "name": "subject",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "direction": {
          "name": "direction",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "duration_minutes": {
          "name": "duration_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "outcome": {
          "name": "outcome",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "sentiment": {
          "name": "sentiment",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(1024)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_summary": {
          "name": "ai_summary",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ai_sentiment_score": {
          "name": "ai_sentiment_score",
          "type": "numeric(3, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_entities": {
          "name": "ai_entities",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "ai_action_items": {
          "name": "ai_action_items",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "ai_follow_up_suggestions": {
          "name": "ai_follow_up_suggestions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "external_id": {
          "name": "external_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "interacted_at": {
          "name": "interacted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_interactions_2025_09_account": {
          "name": "idx_interactions_2025_09_account",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "interacted_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_interactions_2025_09_embedding_hnsw": {
          "name": "idx_interactions_2025_09_embedding_hnsw",
          "columns": [
            {
              "expression": "embedding",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "vector_ip_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hnsw",
          "with": {
            "m": "32",
            "ef_construction": "128"
          }
        },
        "idx_interactions_2025_09_type": {
          "name": "idx_interactions_2025_09_type",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            },
            {
              "expression": "interacted_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_interactions_2025_09_workspace_contact": {
          "name": "idx_interactions_2025_09_workspace_contact",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "interacted_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "interactions_2025_09_pkey": {
          "name": "interactions_2025_09_pkey",
          "columns": [
            "id",
            "interacted_at"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "interactions_ai_sentiment_score_check": {
          "name": "interactions_ai_sentiment_score_check",
          "value": "(ai_sentiment_score >= ('-1'::integer)::numeric) AND (ai_sentiment_score <= (1)::numeric)"
        },
        "interactions_direction_check": {
          "name": "interactions_direction_check",
          "value": "direction = ANY (ARRAY['inbound'::text, 'outbound'::text])"
        },
        "interactions_sentiment_check": {
          "name": "interactions_sentiment_check",
          "value": "sentiment = ANY (ARRAY['positive'::text, 'neutral'::text, 'negative'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.notes": {
      "name": "notes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "opportunity_id": {
          "name": "opportunity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "note_type": {
          "name": "note_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'general'"
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(1024)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_summary": {
          "name": "ai_summary",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ai_tags": {
          "name": "ai_tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "is_private": {
          "name": "is_private",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "tags": {
          "name": "tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_notes_account_id": {
          "name": "idx_notes_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_notes_contact_id": {
          "name": "idx_notes_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_notes_embedding_hnsw": {
          "name": "idx_notes_embedding_hnsw",
          "columns": [
            {
              "expression": "embedding",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "vector_ip_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hnsw",
          "with": {
            "m": "32",
            "ef_construction": "128"
          }
        },
        "idx_notes_workspace_id": {
          "name": "idx_notes_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "notes_account_id_fkey": {
          "name": "notes_account_id_fkey",
          "tableFrom": "notes",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "notes_contact_id_fkey": {
          "name": "notes_contact_id_fkey",
          "tableFrom": "notes",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "notes_opportunity_id_fkey": {
          "name": "notes_opportunity_id_fkey",
          "tableFrom": "notes",
          "tableTo": "opportunities",
          "columnsFrom": [
            "opportunity_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "notes_user_id_fkey": {
          "name": "notes_user_id_fkey",
          "tableFrom": "notes",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "notes_workspace_id_fkey": {
          "name": "notes_workspace_id_fkey",
          "tableFrom": "notes",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can update own notes": {
          "name": "Users can update own notes",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "((workspace_id = get_user_workspace_id()) AND ((user_id = auth.uid()) OR is_workspace_admin()))"
        },
        "Users can create notes": {
          "name": "Users can create notes",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can view workspace notes": {
          "name": "Users can view workspace notes",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "chk_note_has_target": {
          "name": "chk_note_has_target",
          "value": "(contact_id IS NOT NULL) OR (account_id IS NOT NULL) OR (opportunity_id IS NOT NULL)"
        },
        "notes_note_type_check": {
          "name": "notes_note_type_check",
          "value": "note_type = ANY (ARRAY['general'::text, 'meeting'::text, 'call'::text, 'research'::text, 'follow_up'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.opportunities": {
      "name": "opportunities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "stage": {
          "name": "stage",
          "type": "opportunity_stage",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'prospecting'"
        },
        "amount": {
          "name": "amount",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "probability": {
          "name": "probability",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 50
        },
        "close_date": {
          "name": "close_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "insurance_types": {
          "name": "insurance_types",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "policy_term": {
          "name": "policy_term",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 12
        },
        "effective_date": {
          "name": "effective_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "expiration_date": {
          "name": "expiration_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "premium_breakdown": {
          "name": "premium_breakdown",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "coverage_details": {
          "name": "coverage_details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "competing_carriers": {
          "name": "competing_carriers",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "current_carrier": {
          "name": "current_carrier",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "current_premium": {
          "name": "current_premium",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_win_probability": {
          "name": "ai_win_probability",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_recommended_actions": {
          "name": "ai_recommended_actions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "ai_risk_factors": {
          "name": "ai_risk_factors",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "custom_fields": {
          "name": "custom_fields",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "tags": {
          "name": "tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "owner_id": {
          "name": "owner_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "source": {
          "name": "source",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "stage_changed_at": {
          "name": "stage_changed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "campaign_id": {
          "name": "campaign_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "ab_test_id": {
          "name": "ab_test_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "variant_shown": {
          "name": "variant_shown",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "contact_attempts": {
          "name": "contact_attempts",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "max_contact_attempts": {
          "name": "max_contact_attempts",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 7
        },
        "last_contact_attempt": {
          "name": "last_contact_attempt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "next_contact_date": {
          "name": "next_contact_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "paused_until": {
          "name": "paused_until",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "pause_duration_days": {
          "name": "pause_duration_days",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 49
        },
        "quote_sent_at": {
          "name": "quote_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "quote_response_at": {
          "name": "quote_response_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "maybe_followup_days": {
          "name": "maybe_followup_days",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 7
        },
        "ai_summary": {
          "name": "ai_summary",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ai_next_action": {
          "name": "ai_next_action",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ai_quote_recommendation": {
          "name": "ai_quote_recommendation",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ai_follow_up_priority": {
          "name": "ai_follow_up_priority",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "premium": {
          "name": "premium",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "quote_premium": {
          "name": "quote_premium",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "quote_expires_at": {
          "name": "quote_expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_opportunities_ab_test_id": {
          "name": "idx_opportunities_ab_test_id",
          "columns": [
            {
              "expression": "ab_test_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_account_id": {
          "name": "idx_opportunities_account_id",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_ai_follow_up_priority": {
          "name": "idx_opportunities_ai_follow_up_priority",
          "columns": [
            {
              "expression": "ai_follow_up_priority",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "int4_ops"
            }
          ],
          "isUnique": false,
          "where": "(ai_follow_up_priority IS NOT NULL)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_amount": {
          "name": "idx_opportunities_amount",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "amount",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "numeric_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_campaign_id": {
          "name": "idx_opportunities_campaign_id",
          "columns": [
            {
              "expression": "campaign_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_contact_attempts": {
          "name": "idx_opportunities_contact_attempts",
          "columns": [
            {
              "expression": "contact_attempts",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "int4_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_contact_id": {
          "name": "idx_opportunities_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_current_carrier": {
          "name": "idx_opportunities_current_carrier",
          "columns": [
            {
              "expression": "current_carrier",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_insurance_types": {
          "name": "idx_opportunities_insurance_types",
          "columns": [
            {
              "expression": "insurance_types",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "array_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "idx_opportunities_next_contact_date": {
          "name": "idx_opportunities_next_contact_date",
          "columns": [
            {
              "expression": "next_contact_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(next_contact_date IS NOT NULL)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_owner_id": {
          "name": "idx_opportunities_owner_id",
          "columns": [
            {
              "expression": "owner_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_paused_until": {
          "name": "idx_opportunities_paused_until",
          "columns": [
            {
              "expression": "paused_until",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(paused_until IS NOT NULL)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_premium": {
          "name": "idx_opportunities_premium",
          "columns": [
            {
              "expression": "premium",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "numeric_ops"
            }
          ],
          "isUnique": false,
          "where": "(premium IS NOT NULL)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_quote_expires_at": {
          "name": "idx_opportunities_quote_expires_at",
          "columns": [
            {
              "expression": "quote_expires_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_stage": {
          "name": "idx_opportunities_stage",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "date_ops"
            },
            {
              "expression": "stage",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            },
            {
              "expression": "close_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_stage_changed_at": {
          "name": "idx_opportunities_stage_changed_at",
          "columns": [
            {
              "expression": "stage_changed_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opportunities_workspace_id": {
          "name": "idx_opportunities_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "opportunities_ab_test_id_fkey": {
          "name": "opportunities_ab_test_id_fkey",
          "tableFrom": "opportunities",
          "tableTo": "ab_tests",
          "columnsFrom": [
            "ab_test_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "opportunities_account_id_fkey": {
          "name": "opportunities_account_id_fkey",
          "tableFrom": "opportunities",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "opportunities_campaign_id_fkey": {
          "name": "opportunities_campaign_id_fkey",
          "tableFrom": "opportunities",
          "tableTo": "campaigns",
          "columnsFrom": [
            "campaign_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "opportunities_contact_id_fkey": {
          "name": "opportunities_contact_id_fkey",
          "tableFrom": "opportunities",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "opportunities_owner_id_fkey": {
          "name": "opportunities_owner_id_fkey",
          "tableFrom": "opportunities",
          "tableTo": "users",
          "columnsFrom": [
            "owner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "opportunities_workspace_id_fkey": {
          "name": "opportunities_workspace_id_fkey",
          "tableFrom": "opportunities",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can delete owned opportunities": {
          "name": "Users can delete owned opportunities",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "((workspace_id = get_user_workspace_id()) AND ((owner_id = auth.uid()) OR is_workspace_admin()))"
        },
        "Users can update owned opportunities": {
          "name": "Users can update owned opportunities",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Users can create opportunities": {
          "name": "Users can create opportunities",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can view workspace opportunities": {
          "name": "Users can view workspace opportunities",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "chk_opportunity_has_target": {
          "name": "chk_opportunity_has_target",
          "value": "(account_id IS NOT NULL) OR (contact_id IS NOT NULL)"
        },
        "opportunities_probability_check": {
          "name": "opportunities_probability_check",
          "value": "(probability >= 0) AND (probability <= 100)"
        }
      },
      "isRLSEnabled": false
    },
    "public.opportunity_participants": {
      "name": "opportunity_participants",
      "schema": "",
      "columns": {
        "opportunity_id": {
          "name": "opportunity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "influence_level": {
          "name": "influence_level",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 50
        }
      },
      "indexes": {
        "idx_opp_participants_contact_id": {
          "name": "idx_opp_participants_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_opp_participants_workspace_id": {
          "name": "idx_opp_participants_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "opportunity_participants_contact_id_fkey": {
          "name": "opportunity_participants_contact_id_fkey",
          "tableFrom": "opportunity_participants",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "opportunity_participants_opportunity_id_fkey": {
          "name": "opportunity_participants_opportunity_id_fkey",
          "tableFrom": "opportunity_participants",
          "tableTo": "opportunities",
          "columnsFrom": [
            "opportunity_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "opportunity_participants_workspace_id_fkey": {
          "name": "opportunity_participants_workspace_id_fkey",
          "tableFrom": "opportunity_participants",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "opportunity_participants_pkey": {
          "name": "opportunity_participants_pkey",
          "columns": [
            "opportunity_id",
            "contact_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "Users can manage participants for owned opportunities": {
          "name": "Users can manage participants for owned opportunities",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "((workspace_id = get_user_workspace_id()) AND (opportunity_id IN ( SELECT opportunities.id\n   FROM opportunities\n  WHERE ((opportunities.owner_id = auth.uid()) OR is_workspace_admin()))))"
        },
        "Users can view workspace opportunity participants": {
          "name": "Users can view workspace opportunity participants",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "opportunity_participants_influence_level_check": {
          "name": "opportunity_participants_influence_level_check",
          "value": "(influence_level >= 0) AND (influence_level <= 100)"
        }
      },
      "isRLSEnabled": false
    },
    "public.pipelines": {
      "name": "pipelines",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "pipeline_type": {
          "name": "pipeline_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'sales'"
        },
        "insurance_category": {
          "name": "insurance_category",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_default": {
          "name": "is_default",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "stages": {
          "name": "stages",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "automation_rules": {
          "name": "automation_rules",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "ai_optimization_enabled": {
          "name": "ai_optimization_enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "target_conversion_rate": {
          "name": "target_conversion_rate",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "average_cycle_days": {
          "name": "average_cycle_days",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "pipelines_workspace_id_fkey": {
          "name": "pipelines_workspace_id_fkey",
          "tableFrom": "pipelines",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Admins can manage pipelines": {
          "name": "Admins can manage pipelines",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "((workspace_id = get_user_workspace_id()) AND is_workspace_admin())"
        },
        "Users can view workspace pipelines": {
          "name": "Users can view workspace pipelines",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "pipelines_insurance_category_check": {
          "name": "pipelines_insurance_category_check",
          "value": "insurance_category = ANY (ARRAY['personal'::text, 'commercial'::text, 'specialty'::text])"
        },
        "pipelines_pipeline_type_check": {
          "name": "pipelines_pipeline_type_check",
          "value": "pipeline_type = ANY (ARRAY['sales'::text, 'service'::text, 'claims'::text, 'renewal'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.properties": {
      "name": "properties",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "property_type": {
          "name": "property_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "state": {
          "name": "state",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "zip_code": {
          "name": "zip_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "county": {
          "name": "county",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "year_built": {
          "name": "year_built",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "square_feet": {
          "name": "square_feet",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "lot_size_acres": {
          "name": "lot_size_acres",
          "type": "numeric(8, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "stories": {
          "name": "stories",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "bedrooms": {
          "name": "bedrooms",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "bathrooms": {
          "name": "bathrooms",
          "type": "numeric(3, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "construction_type": {
          "name": "construction_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "roof_type": {
          "name": "roof_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "roof_age": {
          "name": "roof_age",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "foundation_type": {
          "name": "foundation_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "exterior_walls": {
          "name": "exterior_walls",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "heating_type": {
          "name": "heating_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "cooling_type": {
          "name": "cooling_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "electrical_type": {
          "name": "electrical_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "plumbing_type": {
          "name": "plumbing_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "smoke_detectors": {
          "name": "smoke_detectors",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "fire_extinguishers": {
          "name": "fire_extinguishers",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "security_system": {
          "name": "security_system",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "sprinkler_system": {
          "name": "sprinkler_system",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "ownership_type": {
          "name": "ownership_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "occupancy_type": {
          "name": "occupancy_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "mortgage_company": {
          "name": "mortgage_company",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "distance_to_fire_station_miles": {
          "name": "distance_to_fire_station_miles",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "distance_to_coast_miles": {
          "name": "distance_to_coast_miles",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "flood_zone": {
          "name": "flood_zone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "wildfire_risk": {
          "name": "wildfire_risk",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "earthquake_risk": {
          "name": "earthquake_risk",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "current_coverage": {
          "name": "current_coverage",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "claims_history": {
          "name": "claims_history",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "replacement_cost": {
          "name": "replacement_cost",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "market_value": {
          "name": "market_value",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "ai_risk_score": {
          "name": "ai_risk_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "ai_risk_factors": {
          "name": "ai_risk_factors",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "ai_replacement_cost_estimate": {
          "name": "ai_replacement_cost_estimate",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "custom_fields": {
          "name": "custom_fields",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_properties_address": {
          "name": "idx_properties_address",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "address",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_properties_contact_id": {
          "name": "idx_properties_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_properties_workspace_id": {
          "name": "idx_properties_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "properties_contact_id_fkey": {
          "name": "properties_contact_id_fkey",
          "tableFrom": "properties",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "properties_workspace_id_fkey": {
          "name": "properties_workspace_id_fkey",
          "tableFrom": "properties",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can manage properties": {
          "name": "Users can manage properties",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "(workspace_id = get_user_workspace_id())"
        },
        "Users can view workspace properties": {
          "name": "Users can view workspace properties",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "properties_ai_risk_score_check": {
          "name": "properties_ai_risk_score_check",
          "value": "(ai_risk_score >= 0) AND (ai_risk_score <= 100)"
        },
        "properties_earthquake_risk_check": {
          "name": "properties_earthquake_risk_check",
          "value": "earthquake_risk = ANY (ARRAY['low'::text, 'moderate'::text, 'high'::text])"
        },
        "properties_ownership_type_check": {
          "name": "properties_ownership_type_check",
          "value": "ownership_type = ANY (ARRAY['owner_occupied'::text, 'rental'::text, 'vacant'::text, 'seasonal'::text])"
        },
        "properties_property_type_check": {
          "name": "properties_property_type_check",
          "value": "property_type = ANY (ARRAY['single_family'::text, 'condo'::text, 'townhouse'::text, 'mobile_home'::text, 'rental'::text, 'commercial'::text])"
        },
        "properties_wildfire_risk_check": {
          "name": "properties_wildfire_risk_check",
          "value": "wildfire_risk = ANY (ARRAY['low'::text, 'moderate'::text, 'high'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.reengagement_schedule": {
      "name": "reengagement_schedule",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "campaign_id": {
          "name": "campaign_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "scheduled_for": {
          "name": "scheduled_for",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "notification_type": {
          "name": "notification_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'scheduled'"
        },
        "executed_at": {
          "name": "executed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "notification_data": {
          "name": "notification_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_reengagement_schedule_contact_id": {
          "name": "idx_reengagement_schedule_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_reengagement_schedule_scheduled_for": {
          "name": "idx_reengagement_schedule_scheduled_for",
          "columns": [
            {
              "expression": "scheduled_for",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "where": "(status = 'scheduled'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_reengagement_schedule_workspace_id": {
          "name": "idx_reengagement_schedule_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "reengagement_schedule_campaign_id_fkey": {
          "name": "reengagement_schedule_campaign_id_fkey",
          "tableFrom": "reengagement_schedule",
          "tableTo": "campaigns",
          "columnsFrom": [
            "campaign_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "reengagement_schedule_contact_id_fkey": {
          "name": "reengagement_schedule_contact_id_fkey",
          "tableFrom": "reengagement_schedule",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "reengagement_schedule_workspace_id_fkey": {
          "name": "reengagement_schedule_workspace_id_fkey",
          "tableFrom": "reengagement_schedule",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can update reengagement_schedule in their workspace": {
          "name": "Users can update reengagement_schedule in their workspace",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "(workspace_id = ( SELECT users.workspace_id\n   FROM users\n  WHERE (users.id = auth.uid())))"
        },
        "Users can create reengagement_schedule in their workspace": {
          "name": "Users can create reengagement_schedule in their workspace",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can view reengagement_schedule in their workspace": {
          "name": "Users can view reengagement_schedule in their workspace",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "reengagement_schedule_notification_type_check": {
          "name": "reengagement_schedule_notification_type_check",
          "value": "notification_type = ANY (ARRAY['email_reminder'::text, 'task_creation'::text, 'calendar_event'::text, 'ai_notification'::text])"
        },
        "reengagement_schedule_status_check": {
          "name": "reengagement_schedule_status_check",
          "value": "status = ANY (ARRAY['scheduled'::text, 'executed'::text, 'cancelled'::text, 'failed'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.schema_versions": {
      "name": "schema_versions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "version": {
          "name": "version",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "applied_at": {
          "name": "applied_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "schema_versions_version_key": {
          "name": "schema_versions_version_key",
          "nullsNotDistinct": false,
          "columns": [
            "version"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.specialty_items": {
      "name": "specialty_items",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "item_type": {
          "name": "item_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "brand": {
          "name": "brand",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "model": {
          "name": "model",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "serial_number": {
          "name": "serial_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "appraised_value": {
          "name": "appraised_value",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "purchase_price": {
          "name": "purchase_price",
          "type": "numeric(12, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "purchase_date": {
          "name": "purchase_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "appraisal_date": {
          "name": "appraisal_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "appraiser_name": {
          "name": "appraiser_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "has_receipt": {
          "name": "has_receipt",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "has_appraisal": {
          "name": "has_appraisal",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "has_photos": {
          "name": "has_photos",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "certificate_number": {
          "name": "certificate_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "storage_location": {
          "name": "storage_location",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "security_measures": {
          "name": "security_measures",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "current_coverage": {
          "name": "current_coverage",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "claims_history": {
          "name": "claims_history",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "custom_fields": {
          "name": "custom_fields",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_specialty_items_contact_id": {
          "name": "idx_specialty_items_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_specialty_items_type": {
          "name": "idx_specialty_items_type",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "item_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_specialty_items_workspace_id": {
          "name": "idx_specialty_items_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "specialty_items_contact_id_fkey": {
          "name": "specialty_items_contact_id_fkey",
          "tableFrom": "specialty_items",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "specialty_items_workspace_id_fkey": {
          "name": "specialty_items_workspace_id_fkey",
          "tableFrom": "specialty_items",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can manage specialty items": {
          "name": "Users can manage specialty items",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "(workspace_id = get_user_workspace_id())"
        },
        "Users can view workspace specialty items": {
          "name": "Users can view workspace specialty items",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "specialty_items_item_type_check": {
          "name": "specialty_items_item_type_check",
          "value": "item_type = ANY (ARRAY['jewelry'::text, 'art'::text, 'collectibles'::text, 'electronics'::text, 'musical_instruments'::text, 'firearms'::text, 'other'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.tasks": {
      "name": "tasks",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "opportunity_id": {
          "name": "opportunity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "task_type": {
          "name": "task_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'follow_up'"
        },
        "priority": {
          "name": "priority",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'medium'"
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "due_date": {
          "name": "due_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "due_time": {
          "name": "due_time",
          "type": "time",
          "primaryKey": false,
          "notNull": false
        },
        "estimated_duration_minutes": {
          "name": "estimated_duration_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "assigned_to_id": {
          "name": "assigned_to_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_by_id": {
          "name": "created_by_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "ai_generated": {
          "name": "ai_generated",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "ai_priority_score": {
          "name": "ai_priority_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "ai_suggested_actions": {
          "name": "ai_suggested_actions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "tags": {
          "name": "tags",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_tasks_assigned_to_pending": {
          "name": "idx_tasks_assigned_to_pending",
          "columns": [
            {
              "expression": "assigned_to_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "date_ops"
            },
            {
              "expression": "due_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "date_ops"
            }
          ],
          "isUnique": false,
          "where": "(status = 'pending'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_tasks_contact_id": {
          "name": "idx_tasks_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_tasks_due_date": {
          "name": "idx_tasks_due_date",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "date_ops"
            },
            {
              "expression": "due_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "where": "(status = ANY (ARRAY['pending'::text, 'in_progress'::text]))",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_tasks_workspace_id": {
          "name": "idx_tasks_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "tasks_account_id_fkey": {
          "name": "tasks_account_id_fkey",
          "tableFrom": "tasks",
          "tableTo": "accounts",
          "columnsFrom": [
            "account_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "tasks_assigned_to_id_fkey": {
          "name": "tasks_assigned_to_id_fkey",
          "tableFrom": "tasks",
          "tableTo": "users",
          "columnsFrom": [
            "assigned_to_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "tasks_contact_id_fkey": {
          "name": "tasks_contact_id_fkey",
          "tableFrom": "tasks",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "tasks_created_by_id_fkey": {
          "name": "tasks_created_by_id_fkey",
          "tableFrom": "tasks",
          "tableTo": "users",
          "columnsFrom": [
            "created_by_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "tasks_opportunity_id_fkey": {
          "name": "tasks_opportunity_id_fkey",
          "tableFrom": "tasks",
          "tableTo": "opportunities",
          "columnsFrom": [
            "opportunity_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "tasks_workspace_id_fkey": {
          "name": "tasks_workspace_id_fkey",
          "tableFrom": "tasks",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can update assigned tasks": {
          "name": "Users can update assigned tasks",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "((workspace_id = get_user_workspace_id()) AND ((assigned_to_id = auth.uid()) OR (created_by_id = auth.uid()) OR is_workspace_admin()))"
        },
        "Users can create tasks": {
          "name": "Users can create tasks",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Users can view workspace tasks": {
          "name": "Users can view workspace tasks",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "tasks_ai_priority_score_check": {
          "name": "tasks_ai_priority_score_check",
          "value": "(ai_priority_score >= 0) AND (ai_priority_score <= 100)"
        },
        "tasks_priority_check": {
          "name": "tasks_priority_check",
          "value": "priority = ANY (ARRAY['low'::text, 'medium'::text, 'high'::text, 'urgent'::text])"
        },
        "tasks_status_check": {
          "name": "tasks_status_check",
          "value": "status = ANY (ARRAY['pending'::text, 'in_progress'::text, 'completed'::text, 'cancelled'::text])"
        },
        "tasks_task_type_check": {
          "name": "tasks_task_type_check",
          "value": "task_type = ANY (ARRAY['follow_up'::text, 'quote'::text, 'meeting'::text, 'call'::text, 'email'::text, 'research'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'agent'"
        },
        "permissions": {
          "name": "permissions",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "license_number": {
          "name": "license_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "license_state": {
          "name": "license_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "license_expiration": {
          "name": "license_expiration",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "specializations": {
          "name": "specializations",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "timezone": {
          "name": "timezone",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'America/Chicago'"
        },
        "notification_preferences": {
          "name": "notification_preferences",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "last_login_at": {
          "name": "last_login_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_users_email": {
          "name": "idx_users_email",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_users_role": {
          "name": "idx_users_role",
          "columns": [
            {
              "expression": "role",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_users_workspace_id": {
          "name": "idx_users_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "users_workspace_id_fkey": {
          "name": "users_workspace_id_fkey",
          "tableFrom": "users",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_key": {
          "name": "users_email_key",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {
        "Admins can manage workspace users": {
          "name": "Admins can manage workspace users",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "((workspace_id = get_user_workspace_id()) AND is_workspace_admin())"
        },
        "Users can update own profile": {
          "name": "Users can update own profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Users can view workspace members": {
          "name": "Users can view workspace members",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "users_role_check": {
          "name": "users_role_check",
          "value": "role = ANY (ARRAY['owner'::text, 'manager'::text, 'agent'::text, 'csr'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.vehicles": {
      "name": "vehicles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "workspace_id": {
          "name": "workspace_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "vin": {
          "name": "vin",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "year": {
          "name": "year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "make": {
          "name": "make",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "model": {
          "name": "model",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "trim": {
          "name": "trim",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "body_style": {
          "name": "body_style",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "license_plate": {
          "name": "license_plate",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "registration_state": {
          "name": "registration_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "registration_expiration": {
          "name": "registration_expiration",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "ownership_type": {
          "name": "ownership_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "lienholder_name": {
          "name": "lienholder_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "lienholder_address": {
          "name": "lienholder_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "annual_mileage": {
          "name": "annual_mileage",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "primary_use": {
          "name": "primary_use",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "garage_type": {
          "name": "garage_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "safety_features": {
          "name": "safety_features",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "anti_theft_devices": {
          "name": "anti_theft_devices",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "modifications": {
          "name": "modifications",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "current_coverage": {
          "name": "current_coverage",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "claims_history": {
          "name": "claims_history",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "ai_risk_score": {
          "name": "ai_risk_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "ai_risk_factors": {
          "name": "ai_risk_factors",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "custom_fields": {
          "name": "custom_fields",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_vehicles_contact_id": {
          "name": "idx_vehicles_contact_id",
          "columns": [
            {
              "expression": "contact_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_vehicles_vin": {
          "name": "idx_vehicles_vin",
          "columns": [
            {
              "expression": "vin",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "where": "(vin IS NOT NULL)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_vehicles_workspace_id": {
          "name": "idx_vehicles_workspace_id",
          "columns": [
            {
              "expression": "workspace_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "vehicles_contact_id_fkey": {
          "name": "vehicles_contact_id_fkey",
          "tableFrom": "vehicles",
          "tableTo": "contacts",
          "columnsFrom": [
            "contact_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "vehicles_workspace_id_fkey": {
          "name": "vehicles_workspace_id_fkey",
          "tableFrom": "vehicles",
          "tableTo": "workspaces",
          "columnsFrom": [
            "workspace_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can manage vehicles": {
          "name": "Users can manage vehicles",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "public"
          ],
          "using": "(workspace_id = get_user_workspace_id())"
        },
        "Users can view workspace vehicles": {
          "name": "Users can view workspace vehicles",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "vehicles_ai_risk_score_check": {
          "name": "vehicles_ai_risk_score_check",
          "value": "(ai_risk_score >= 0) AND (ai_risk_score <= 100)"
        },
        "vehicles_garage_type_check": {
          "name": "vehicles_garage_type_check",
          "value": "garage_type = ANY (ARRAY['garage'::text, 'carport'::text, 'driveway'::text, 'street'::text])"
        },
        "vehicles_ownership_type_check": {
          "name": "vehicles_ownership_type_check",
          "value": "ownership_type = ANY (ARRAY['owned'::text, 'financed'::text, 'leased'::text])"
        },
        "vehicles_primary_use_check": {
          "name": "vehicles_primary_use_check",
          "value": "primary_use = ANY (ARRAY['pleasure'::text, 'commute'::text, 'business'::text, 'farm'::text])"
        }
      },
      "isRLSEnabled": false
    },
    "public.workspaces": {
      "name": "workspaces",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "agency_license": {
          "name": "agency_license",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "agency_type": {
          "name": "agency_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "primary_lines": {
          "name": "primary_lines",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'[]'::jsonb"
        },
        "timezone": {
          "name": "timezone",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'America/Chicago'"
        },
        "date_format": {
          "name": "date_format",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'MM/DD/YYYY'"
        },
        "currency": {
          "name": "currency",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'USD'"
        },
        "subscription_tier": {
          "name": "subscription_tier",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'basic'"
        },
        "max_users": {
          "name": "max_users",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 5
        },
        "max_contacts": {
          "name": "max_contacts",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 1000
        },
        "settings": {
          "name": "settings",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_workspaces_name": {
          "name": "idx_workspaces_name",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Workspace owners can update workspace": {
          "name": "Workspace owners can update workspace",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ],
          "using": "((id = get_user_workspace_id()) AND is_workspace_admin())"
        },
        "Users can view their workspace": {
          "name": "Users can view their workspace",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "checkConstraints": {
        "workspaces_agency_type_check": {
          "name": "workspaces_agency_type_check",
          "value": "agency_type = ANY (ARRAY['Independent'::text, 'Captive'::text, 'Direct'::text])"
        }
      },
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.contact_lifecycle_stage": {
      "name": "contact_lifecycle_stage",
      "schema": "public",
      "values": [
        "lead",
        "opportunity_contact",
        "customer",
        "churned",
        "on_hold"
      ]
    },
    "public.interaction_type": {
      "name": "interaction_type",
      "schema": "public",
      "values": [
        "email",
        "call",
        "meeting",
        "note",
        "task_completed",
        "sms",
        "quote_generated",
        "policy_issued"
      ]
    },
    "public.opportunity_stage": {
      "name": "opportunity_stage",
      "schema": "public",
      "values": [
        "prospecting",
        "qualification",
        "proposal",
        "negotiation",
        "closed_won",
        "closed_lost",
        "attempting_contact",
        "contacted_no_interest",
        "contacted_interested",
        "quoted",
        "quote_yes",
        "quote_no_followup_ok",
        "quote_no_dont_contact",
        "quote_maybe",
        "proposed",
        "paused",
        "future_follow_up_date"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}